# Configuration for Alacritty, a GPU enhanced terminal emulator
#
# Template config:
# https://github.com/alacritty/alacritty/blob/master/alacritty.yml

import:
  - ~/.config/alacritty/fall.yml
  # - ~/.config/alacritty/transparent.yml

window:

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is not scaled by
  # DPI and the specified value is always added at both opposing sides.
  padding:
    x: 10
    y: 10

  # Window decorations
  #
  # Available values:
  # - full: borders and title bar
  # - none: neither borders nor title bar
  # - transparent: title bar, transparent background and title bar buttons
  # - buttonless: title bar, transparent background, but no title bar buttons
  decorations: buttonless
  # decorations: full
  # decorations: none
  # decorations: transparent

# Font config (changes require restart)
font:
  # The Default font
  normal:
    family: "Hack"
    style: "Regular"
  # Bold Font
  bold:
    family: "Hack"
    style: "Bold"
  # Italic font
  italic:
    family: "Hack"
    style: "Italic"

  size: 14.0

shell:
  program: /opt/homebrew/bin/bash
  args:
    - --login
    # - --rcfile $HOME/.config/bashrc

cursor:
  # Cursor style
  style:
    # Cursor shape
    #
    # Values for `shape`:
    #   - â–‡ Block
    #   - _ Underline
    #   - | Beam
    shape: Underline

    # Cursor blinking state
    #
    # Values for `blinking`:
    #   - Never: Prevent the cursor from ever blinking
    #   - Off: Disable blinking by default
    #   - On: Enable blinking by default
    #   - Always: Force the cursor to always blink
    blinking: On

    # If this is `true`, the cursor will be rendered as a hollow box when the
    # window is not focused.
    unfocused_hollow: true

  # Cursor blinking interval in milliseconds.
  blink_interval: 750

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: false

  # Thickness of the cursor relative to the cell width as floating point number
  # from `0.0` to `1.0`.
  # (For Beam and Underline styles only)
  thickness: 0.5

# Bell
#
# The bell is rung every time the BEL control character is received.
bell:
  # Visual Bell Animation
  #
  # Animation effect for flashing the screen when the visual bell is rung.
  #
  # Values for `animation`:
  #   - Ease
  #   - EaseOut
  #   - EaseOutSine
  #   - EaseOutQuad
  #   - EaseOutCubic
  #   - EaseOutQuart
  #   - EaseOutQuint
  #   - EaseOutExpo
  #   - EaseOutCirc
  #   - Linear
  animation: EaseOutSine

  # Duration of the visual bell flash in milliseconds. A `duration` of `0` will
  # disable the visual bell animation.
  duration: 300

  # Visual bell animation color.
  color: '#dba40d'

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty
# captures the mouse, the `Shift` modifier is automatically added as a
# requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
mouse_bindings:
  # Paste on Right-click
  - { mouse: Right, action: PasteSelection }

key_bindings:
  # Fullscreen
  - { key: Return,   mods: Command,    action: ToggleSimpleFullScreen }

  # Hack to open multiple terminals
  - { key: N,        mods: Command,
      command: { program: "open", args: ["-n", "/Applications/Alacritty.app"] } }

  # Alacritty (still!) doesn't have an "Option -> Alt/Esc+" iterm-like remap
  - { key: A,         mods: Alt,       chars: "\x1ba"  }
  - { key: B,         mods: Alt,       chars: "\x1bb"  }
  - { key: C,         mods: Alt,       chars: "\x1bc"  }
  - { key: D,         mods: Alt,       chars: "\x1bd"  }
  - { key: E,         mods: Alt,       chars: "\x1be"  }
  - { key: F,         mods: Alt,       chars: "\x1bf"  }
  - { key: G,         mods: Alt,       chars: "\x1bg"  }
  - { key: H,         mods: Alt,       chars: "\x1bh"  }
  - { key: I,         mods: Alt,       chars: "\x1bi"  }
  - { key: J,         mods: Alt,       chars: "\x1bj"  }
  - { key: K,         mods: Alt,       chars: "\x1bk"  }
  - { key: L,         mods: Alt,       chars: "\x1bl"  }
  - { key: M,         mods: Alt,       chars: "\x1bm"  }
  - { key: N,         mods: Alt,       chars: "\x1bn"  }
  - { key: O,         mods: Alt,       chars: "\x1bo"  }
  - { key: P,         mods: Alt,       chars: "\x1bp"  }
  - { key: Q,         mods: Alt,       chars: "\x1bq"  }
  - { key: R,         mods: Alt,       chars: "\x1br"  }
  - { key: S,         mods: Alt,       chars: "\x1bs"  }
  - { key: T,         mods: Alt,       chars: "\x1bt"  }
  - { key: U,         mods: Alt,       chars: "\x1bu"  }
  - { key: V,         mods: Alt,       chars: "\x1bv"  }
  - { key: W,         mods: Alt,       chars: "\x1bw"  }
  - { key: X,         mods: Alt,       chars: "\x1bx"  }
  - { key: Y,         mods: Alt,       chars: "\x1by"  }
  - { key: Z,         mods: Alt,       chars: "\x1bz"  }
  - { key: A,         mods: Alt|Shift, chars: "\x1bA"  }
  - { key: B,         mods: Alt|Shift, chars: "\x1bB"  }
  - { key: C,         mods: Alt|Shift, chars: "\x1bC"  }
  - { key: D,         mods: Alt|Shift, chars: "\x1bD"  }
  - { key: E,         mods: Alt|Shift, chars: "\x1bE"  }
  - { key: F,         mods: Alt|Shift, chars: "\x1bF"  }
  - { key: G,         mods: Alt|Shift, chars: "\x1bG"  }
  - { key: H,         mods: Alt|Shift, chars: "\x1bH"  }
  - { key: I,         mods: Alt|Shift, chars: "\x1bI"  }
  - { key: J,         mods: Alt|Shift, chars: "\x1bJ"  }
  - { key: K,         mods: Alt|Shift, chars: "\x1bK"  }
  - { key: L,         mods: Alt|Shift, chars: "\x1bL"  }
  - { key: M,         mods: Alt|Shift, chars: "\x1bM"  }
  - { key: N,         mods: Alt|Shift, chars: "\x1bN"  }
  - { key: O,         mods: Alt|Shift, chars: "\x1bO"  }
  - { key: P,         mods: Alt|Shift, chars: "\x1bP"  }
  - { key: Q,         mods: Alt|Shift, chars: "\x1bQ"  }
  - { key: R,         mods: Alt|Shift, chars: "\x1bR"  }
  - { key: S,         mods: Alt|Shift, chars: "\x1bS"  }
  - { key: T,         mods: Alt|Shift, chars: "\x1bT"  }
  - { key: U,         mods: Alt|Shift, chars: "\x1bU"  }
  - { key: V,         mods: Alt|Shift, chars: "\x1bV"  }
  - { key: W,         mods: Alt|Shift, chars: "\x1bW"  }
  - { key: X,         mods: Alt|Shift, chars: "\x1bX"  }
  - { key: Y,         mods: Alt|Shift, chars: "\x1bY"  }
  - { key: Z,         mods: Alt|Shift, chars: "\x1bZ"  }
  - { key: Key1,      mods: Alt,       chars: "\x1b1"  }
  - { key: Key2,      mods: Alt,       chars: "\x1b2"  }
  - { key: Key3,      mods: Alt,       chars: "\x1b3"  }
  - { key: Key4,      mods: Alt,       chars: "\x1b4"  }
  - { key: Key5,      mods: Alt,       chars: "\x1b5"  }
  - { key: Key6,      mods: Alt,       chars: "\x1b6"  }
  - { key: Key7,      mods: Alt,       chars: "\x1b7"  }
  - { key: Key8,      mods: Alt,       chars: "\x1b8"  }
  - { key: Key9,      mods: Alt,       chars: "\x1b9"  }
  - { key: Key0,      mods: Alt,       chars: "\x1b0"  }
  - { key: Space,     mods: Control,   chars: "\x00"   } # Ctrl + Space
  - { key: Grave,     mods: Alt,       chars: "\x1b`"  } # Alt + `
  - { key: Grave,     mods: Alt|Shift, chars: "\x1b~"  } # Alt + ~
  - { key: Period,    mods: Alt,       chars: "\x1b."  } # Alt + .
  - { key: Key8,      mods: Alt|Shift, chars: "\x1b*"  } # Alt + *
  - { key: Key3,      mods: Alt|Shift, chars: "\x1b#"  } # Alt + #
  - { key: Period,    mods: Alt|Shift, chars: "\x1b>"  } # Alt + >
  - { key: Comma,     mods: Alt|Shift, chars: "\x1b<"  } # Alt + <
  - { key: Minus,     mods: Alt|Shift, chars: "\x1b_"  } # Alt + _
  - { key: Key5,      mods: Alt|Shift, chars: "\x1b%"  } # Alt + %
  - { key: Key6,      mods: Alt|Shift, chars: "\x1b^"  } # Alt + ^
  - { key: Backslash, mods: Alt,       chars: "\x1b\\" } # Alt + \
  - { key: Backslash, mods: Alt|Shift, chars: "\x1b|"  }
