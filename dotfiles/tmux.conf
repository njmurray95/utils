################################################################################
#      _
#    _| |_  _ __ ___   _   _  _  _,
#   |_   _|| `_ ` _ \ | | | || \/ |
#     | |_ | | | | | || |_| | >  <
#     |___||_| |_| |_| \__^_||_/\_|
#

#
#   Table of Contents
#    | General
#    | Keybindings
#    | Color Scheme
#    | Copy Mode
#    | Mouse
#
#   Plugins
#    | Powerline
#

################################################################################
#  => Plugins (XXX)
################################################################################

# Powerline
#source "/anaconda3/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf"

################################################################################
#  => General (XXX)
################################################################################

# Monitor window activity
set-window-option -g monitor-activity on
set-option -g visual-activity on

set -g history-limit 100000             # Scrollback number of lines

set-option -gs escape-time 0            # Reduce wait on pressing <Esc>

set-option  -g display-time 4000        # Message display time

set -g mouse on
# Let Mouse select panes

# Start windows and panes at 1 (0 is on the wrong side of the keyboard)
set -g base-index 1
set -g pane-base-index 1

# Let xterm control title
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-option -g set-titles on

# Make new panes spawn in PWD
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"

# Toggle status bar
bind-key Space set-option -g status

################################################################################
#  => Keybindings (XXX)
################################################################################

# Tmux commands start with backtick, two to print a normal backtick
unbind C-b
set -g prefix `
bind-key ` send-prefix

# Pressing prefix twice jumps to last window
bind-key C-Space last-window

# Bind prefix-enter to open command prompt
bind-key Enter command-prompt

# Bind r to reload tmux conf and display
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# Let a synchronize panes
bind-key a set-window-option synchronize-panes

# Let KL move panes
unbind-key J
bind-key J swap-pane -D

unbind-key K
bind-key K swap-pane -U

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# Try this for window switching
#bind -n M-j select-pane -L
#bind -n M-k select-pane -D
#bind -n M-l select-pane -U
#bind -n M-\; select-pane -R

################################################################################
#  => Color Scheme (XXX)
################################################################################
# Color
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# set pane colors
# set-option pane-border-fg <color> # sets inactive border panes
# set-option pane-active-border-fg <color>

# Command prompt colors
set-option -g message-bg colour234     # Gray
set-option -g message-fg colour166  # Orange

# Active window title colors
# set-window-option -g window-status-current-fg colour166     # Orange
# set-window-option -g window-status-current-bg colour132

# set-option status-bg <color> # status background
# set-option status-fg <color> # status color

# Status bar colors
set -g status-bg colour234          # Grey
set -g status-fg colour33           # Blue

# Pane border colors
set -g pane-border-bg colour233         # Black
set -g pane-border-fg colour238         # Grey
set -g pane-active-border-bg colour233  # Black
set -g pane-active-border-fg colour33   # Blue

#  bind k to kill-window
bind-key k confirm kill-window

################################################################################
#  => Copy Mode (XXX)
################################################################################

# Enter copy mode
bind-key escape copy-mode

# Implement vi-like copy mode
unbind-key 'p'
bind 'p' paste-buffer
#bind-key -T vi-copy 'v' begin-selection # does this do anything anymore?

# Works only with Mac OS X pbcopy
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "highlighted selection copied to system clipboard"

################################################################################
#  => Mouse (XXX)
################################################################################
